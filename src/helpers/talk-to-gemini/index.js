import axios from "axios";

// CONSTANTS
const GEMINI_BASE_URL =
  "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent"; // Replace with the actual API endpoint

// FUNCTION TO GENERATE RESPONSE FROM GEMINI BASED ON
// USER INPUT i.e. RESUME AND SELECTED JOB DESCRIPTION
// AND RETURN THE RESPONSE
export const talkToGemini = async (prompt, apiKey) => {
  // VALIDATING REQUIRED PARAMETERS
  if (!prompt || !apiKey) {
    console.error("Missing required parameters for the API call.");
    return { error: "Missing required parameters for the API call." };
  }

  // MAKING API CALL TO GET THE GEMINI RESPONSE USING TRY/CATCH
  try {
    // Send a POST request to the Gemini API
    const response = await axios.post(
      `${GEMINI_BASE_URL}?key=${apiKey}`,
      {
        contents: [
          {
            parts: [
              {
                text: prompt,
              },
            ],
          },
        ],
      },
      {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    // RETURN THE TEXT GENERATED BY AI
    return {
      coverLetter: response?.data?.candidates[0]?.content?.parts[0]?.text,
    };
  } catch (error) {
    // HANDLING ERRORS SPECIFICALLY FOR USER BASED ON STATUS CODE
    if (error.response) {
      const { status } = error.response;

      if (status === 401) {
        return {
          error: "Invalid API key. Please check your key or get a new one.",
        };
      } else if (status === 429) {
        return {
          error:
            "Rate limit exceeded. Please wait before making more requests.",
        };
      } else if (status === 500) {
        return {
          error: "Server error. Please try again later.",
        };
      } else {
        return {
          error: `An error occurred: ${
            error.response.data.message || "Unknown error."
          }`,
        };
      }
    } else {
      // HANDLING UNFORESEEN ERROR
      console.error("Error with Gemini API:", error.message);
      return {
        error:
          "An unexpected error occurred. Please check your connection and try again.",
      };
    }
  }
};
